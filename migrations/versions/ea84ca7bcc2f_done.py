"""done

Revision ID: ea84ca7bcc2f
Revises: 
Create Date: 2025-09-08 11:38:46.609543

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ea84ca7bcc2f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parent_address')
    op.drop_table('parent')
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('student_email_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('student_phone_key'), type_='unique')
        batch_op.drop_column('dob')
        batch_op.drop_column('pocket_money')
        batch_op.drop_column('email')
        batch_op.drop_column('phone')
        batch_op.drop_column('created_at')
        batch_op.drop_column('marks')
        batch_op.drop_column('is_married')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_married', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('marks', sa.REAL(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('phone', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('pocket_money', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('dob', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint(batch_op.f('student_phone_key'), ['phone'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint(batch_op.f('student_email_key'), ['email'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)

    op.create_table('parent',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('parent_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='parent_pkey'),
    sa.UniqueConstraint('email', name='parent_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('parent_address',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('parent_email', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('county_name', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('town', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('latitude', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('house_no', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_email'], ['parent.email'], name=op.f('parent_address_parent_email_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('parent_address_pkey'))
    )
    # ### end Alembic commands ###
